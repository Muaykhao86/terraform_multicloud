name: PR Workflow

on:
  pull_request:

jobs:
  diff-check:
    runs-on: ubuntu-latest

    steps:
      # Checkout the code
      - name: Checkout Code
        uses: actions/checkout@v3
        with:
          fetch-depth: 0  # Fetch the full commit history

      # Show changed files
      - name: Determine Changed Files
        id: diff
        
        run: |
          echo "Base branch SHA: ${{ github.event.pull_request.base.sha }}"
          echo "Head branch SHA: ${{ github.event.pull_request.head.sha }}"
          
          echo "Comparing changes between:"
          echo "Base branch: origin/${{ github.event.pull_request.base.ref }} (SHA: ${{ github.event.pull_request.base.sha }})"
          echo "Head branch: ${{ github.event.pull_request.head.sha }}"
          
          # Use git diff to list changed files
          CHANGED_FILES=$(git diff --name-only ${{ github.event.pull_request.base.sha }} ${{ github.event.pull_request.head.sha }})
          echo "Changed files:"
          echo "$CHANGED_FILES"

          # Set changed files as output so other steps can use it
          CHANGED_FILES_SINGLE_LINE=$(echo "$CHANGED_FILES" | tr '\n' ',')  # Converts newlines to commas
          echo "cfl=${CHANGED_FILES_SINGLE_LINE}" >> $GITHUB_ENV

      # Filter relevant changes
      - name: Check for Relevant Changes
        env: 
          changed_files_one_line: ${{ env.cfl }}
        id: check-path
        run: |
          search_dir = ".github/workflows"
          echo "Filtering files for the path: $search_dir"
          echo "$changed_files_one_line"

          echo "Testing $changed_files_one_line for $search_dir"
          if ! echo "$changed_files_one_line" | grep -q "$search_dir"; then
            echo "No relevant changes found for $search_dir. Skipping job."
            echo "skip=true" >> $GITHUB_ENV
          else
            echo "Relevant changes found. Proceeding with tests."
          fi

      # Run tests only if relevant changes were found
      - name: Run Tests
        if: env.skip != 'true'
        run: |
          echo "Running tests for relevant changes."

      # Skip message
      - name: Skip Job
        if: env.skip == 'true'
        run: echo "No relevant changes detected. Job skipped."
