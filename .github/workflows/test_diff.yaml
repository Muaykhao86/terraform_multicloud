name: PR Workflow

on:
  workflow_call: 
    inputs: 
      dir: 
        description: "The directory to check for changes"
        type: string
        default: "./patterns"
    

jobs:
  diff-check:
    runs-on: ubuntu-latest
    outputs:
      changed: ${{ steps.check-changes.outputs.changes }} 

    steps:
      # Checkout the code
      - name: Checkout Code
        uses: actions/checkout@v3
        with:
          fetch-depth: 0  # Fetch the full commit history

      # Show changed files
      - name: Determine Changed Files
        id: diff
        
        run: |
          BASE_BRANCH_SHA=${{ github.event.pull_request.base.sha }}
          BASE_BRANCH_REF=${{ github.event.pull_request.base.ref }}
          HEAD_BRANCH_SHA=${{ github.event.pull_request.head.sha }}
          HEAD_BRANCH_REF=${{ github.event.pull_request.head.ref }}
          
          echo "Base branch SHA: $BASE_BRANCH_SHA"
          echo "Head branch SHA: $HEAD_BRANCH_SHA"
          
          echo "Comparing changes between:"
          echo "Base branch: origin/$BASE_BRANCH_REF (SHA: $BASE_BRANCH_SHA)"
          echo "Head branch: $HEAD_BRANCH_SHA"
          
          # Use git diff to list changed files
          CHANGED_FILES=$(git diff --name-only $BASE_BRANCH_SHA $HEAD_BRANCH_SHA)
          echo "Changed files:"
          echo "$CHANGED_FILES"

          # Set changed files as output so other steps can use it
          CHANGED_FILES_SINGLE_LINE=$(echo "$CHANGED_FILES" | tr '\n' ',')  # Converts newlines to commas
          echo "cfl=${CHANGED_FILES_SINGLE_LINE}" >> $GITHUB_ENV

      # Filter relevant changes
      - name: Check for Relevant Changes
        env: 
          changed_files_one_line: ${{ env.cfl }}
          search_dir:  ${{ inputs.dir }}
        id: check-changes
        run: |
          echo "Filtering files for the path: $search_dir"
          echo "$changed_files_one_line"

          echo "Testing $changed_files_one_line for $search_dir"
          if ! echo "$changed_files_one_line" | grep -q "$search_dir"; then
            echo "No relevant changes found for $search_dir. Skipping job."
            echo "changes=true" >> $GITHUB_OUTPUTS
          else
            echo "Relevant changes found. Proceeding with tests."
            echo "changes=false" >> $GITHUB_OUTPUTS
          fi

  # testing:
  #   if: ${{ env.run_tests }} == 'true'
  #   runs-on: ubuntu-latest
  #   steps:
  #     # Run tests only if relevant changes were found
  #     - name: Run Tests
  #       run: |
  #         echo "Running tests for relevant changes."

      # # Skip message
      # - name: Skip Job
      #   if: env.skip == 'true'
      #   run: echo "No relevant changes detected. Job skipped."
